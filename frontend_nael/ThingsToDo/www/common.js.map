{"version":3,"sources":["./node_modules/@ionic/core/dist/esm/button-active-d4bd4f74.js","./node_modules/@ionic/core/dist/esm/framework-delegate-4392cd63.js","./node_modules/@ionic/core/dist/esm/haptic-27b3f981.js","./node_modules/@ionic/core/dist/esm/spinner-configs-cd7845af.js","./node_modules/@ionic/core/dist/esm/theme-ff3fc52f.js","./src/app/modal-popup-add/modal-popup-add.page.ts","./src/app/modal-popup/modal-popup.page.ts","./src/app/services/TaskService.ts","./src/app/modal-popup-add/modal-popup-add.page.scss","./src/app/modal-popup/modal-popup.page.scss","./src/app/modal-popup-add/modal-popup-add.page.html","./src/app/modal-popup/modal-popup.page.html"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAqD;AACkE;AACnE;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,qDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,qDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iEAAa;AACtB;AACA;AACA;AACA,mEAAmE,kDAAoB;AACvF,kEAAkE,kDAAsB;AACxF;AACA;AACA,MAAM,sDAAkB;AACxB;AACA;AACA,GAAG;AACH;;AAE0C;;;;;;;;;;;;;;;;;;AC/DoB;;AAE9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,uDAAgB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEsD;;;;;;;;;;;;;;;;;;;;ACjCtD;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,QAAQ;AACjC,GAAG;AACH;AACA,iBAAiB,iBAAiB;AAClC,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,iBAAiB;AACpD;AACA;AACA;AACA;;AAEoI;;;;;;;;;;;;;;;;ACzGpI;AACA;AACA;AACA;AACA;AACA,gCAAgC,4BAA4B;AAC5D;AACA;AACA;AACA;AACA,oBAAoB,oBAAoB;AACxC,qBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,gCAAgC,mBAAmB;AACnD;AACA;AACA;AACA;AACA,oBAAoB,oBAAoB;AACxC,qBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,gBAAgB;AACrC;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,kCAAkC,sCAAsC;AACxE,gCAAgC,4BAA4B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,kCAAkC,sCAAsC;AACxE,gCAAgC,4BAA4B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEyB;;;;;;;;;;;;;;;;;;;AC7GzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E,kCAAkC,MAAM,UAAU;AAC5H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEqF;;;;;;;;;;;;;;;;;;;;;;;;;ACtC5B;AACR;AAEK;IAOzC,iBAAiB,SAAjB,iBAAiB;IAO5B,YACU,eAAgC,EAAU,WAAwB;QAAlE,oBAAe,GAAf,eAAe,CAAiB;QAAU,gBAAW,GAAX,WAA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","file":"common.js","sourcesContent":["import { c as writeTask } from './index-7a8b7a1c.js';\nimport { h as hapticSelectionEnd, a as hapticSelectionStart, b as hapticSelectionChanged } from './haptic-27b3f981.js';\nimport { createGesture } from './index-34cb2743.js';\n\nconst createButtonActiveGesture = (el, isButton) => {\n  let currentTouchedButton;\n  let initialTouchedButton;\n  const activateButtonAtPoint = (x, y, hapticFeedbackFn) => {\n    if (typeof document === 'undefined') {\n      return;\n    }\n    const target = document.elementFromPoint(x, y);\n    if (!target || !isButton(target)) {\n      clearActiveButton();\n      return;\n    }\n    if (target !== currentTouchedButton) {\n      clearActiveButton();\n      setActiveButton(target, hapticFeedbackFn);\n    }\n  };\n  const setActiveButton = (button, hapticFeedbackFn) => {\n    currentTouchedButton = button;\n    if (!initialTouchedButton) {\n      initialTouchedButton = currentTouchedButton;\n    }\n    const buttonToModify = currentTouchedButton;\n    writeTask(() => buttonToModify.classList.add('ion-activated'));\n    hapticFeedbackFn();\n  };\n  const clearActiveButton = (dispatchClick = false) => {\n    if (!currentTouchedButton) {\n      return;\n    }\n    const buttonToModify = currentTouchedButton;\n    writeTask(() => buttonToModify.classList.remove('ion-activated'));\n    /**\n     * Clicking on one button, but releasing on another button\n     * does not dispatch a click event in browsers, so we\n     * need to do it manually here. Some browsers will\n     * dispatch a click if clicking on one button, dragging over\n     * another button, and releasing on the original button. In that\n     * case, we need to make sure we do not cause a double click there.\n     */\n    if (dispatchClick && initialTouchedButton !== currentTouchedButton) {\n      currentTouchedButton.click();\n    }\n    currentTouchedButton = undefined;\n  };\n  return createGesture({\n    el,\n    gestureName: 'buttonActiveDrag',\n    threshold: 0,\n    onStart: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionStart),\n    onMove: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionChanged),\n    onEnd: () => {\n      clearActiveButton(true);\n      hapticSelectionEnd();\n      initialTouchedButton = undefined;\n    }\n  });\n};\n\nexport { createButtonActiveGesture as c };\n","import { c as componentOnReady } from './helpers-dd7e4b7b.js';\n\nconst attachComponent = async (delegate, container, component, cssClasses, componentProps) => {\n  if (delegate) {\n    return delegate.attachViewToDom(container, component, componentProps, cssClasses);\n  }\n  if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\n    throw new Error('framework delegate is missing');\n  }\n  const el = (typeof component === 'string')\n    ? container.ownerDocument && container.ownerDocument.createElement(component)\n    : component;\n  if (cssClasses) {\n    cssClasses.forEach(c => el.classList.add(c));\n  }\n  if (componentProps) {\n    Object.assign(el, componentProps);\n  }\n  container.appendChild(el);\n  await new Promise(resolve => componentOnReady(el, resolve));\n  return el;\n};\nconst detachComponent = (delegate, element) => {\n  if (element) {\n    if (delegate) {\n      const container = element.parentElement;\n      return delegate.removeViewFromDom(container, element);\n    }\n    element.remove();\n  }\n  return Promise.resolve();\n};\n\nexport { attachComponent as a, detachComponent as d };\n","const HapticEngine = {\n  getEngine() {\n    const win = window;\n    return (win.TapticEngine) || (win.Capacitor && win.Capacitor.isPluginAvailable('Haptics') && win.Capacitor.Plugins.Haptics);\n  },\n  available() {\n    return !!this.getEngine();\n  },\n  isCordova() {\n    return !!window.TapticEngine;\n  },\n  isCapacitor() {\n    const win = window;\n    return !!win.Capacitor;\n  },\n  impact(options) {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n    engine.impact({ style });\n  },\n  notification(options) {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n    engine.notification({ style });\n  },\n  selection() {\n    this.impact({ style: 'light' });\n  },\n  selectionStart() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionStart();\n    }\n    else {\n      engine.gestureSelectionStart();\n    }\n  },\n  selectionChanged() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionChanged();\n    }\n    else {\n      engine.gestureSelectionChanged();\n    }\n  },\n  selectionEnd() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionEnd();\n    }\n    else {\n      engine.gestureSelectionEnd();\n    }\n  }\n};\n/**\n * Trigger a selection changed haptic event. Good for one-time events\n * (not for gestures)\n */\nconst hapticSelection = () => {\n  HapticEngine.selection();\n};\n/**\n * Tell the haptic engine that a gesture for a selection change is starting.\n */\nconst hapticSelectionStart = () => {\n  HapticEngine.selectionStart();\n};\n/**\n * Tell the haptic engine that a selection changed during a gesture.\n */\nconst hapticSelectionChanged = () => {\n  HapticEngine.selectionChanged();\n};\n/**\n * Tell the haptic engine we are done with a gesture. This needs to be\n * called lest resources are not properly recycled.\n */\nconst hapticSelectionEnd = () => {\n  HapticEngine.selectionEnd();\n};\n/**\n * Use this to indicate success/failure/warning to the user.\n * options should be of the type `{ style: 'light' }` (or `medium`/`heavy`)\n */\nconst hapticImpact = (options) => {\n  HapticEngine.impact(options);\n};\n\nexport { hapticSelectionStart as a, hapticSelectionChanged as b, hapticSelection as c, hapticImpact as d, hapticSelectionEnd as h };\n","const spinners = {\n  'bubbles': {\n    dur: 1000,\n    circles: 9,\n    fn: (dur, index, total) => {\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      const angle = 2 * Math.PI * index / total;\n      return {\n        r: 5,\n        style: {\n          'top': `${9 * Math.sin(angle)}px`,\n          'left': `${9 * Math.cos(angle)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'circles': {\n    dur: 1000,\n    circles: 8,\n    fn: (dur, index, total) => {\n      const step = index / total;\n      const animationDelay = `${(dur * step) - dur}ms`;\n      const angle = 2 * Math.PI * step;\n      return {\n        r: 5,\n        style: {\n          'top': `${9 * Math.sin(angle)}px`,\n          'left': `${9 * Math.cos(angle)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'circular': {\n    dur: 1400,\n    elmDuration: true,\n    circles: 1,\n    fn: () => {\n      return {\n        r: 20,\n        cx: 48,\n        cy: 48,\n        fill: 'none',\n        viewBox: '24 24 48 48',\n        transform: 'translate(0,0)',\n        style: {}\n      };\n    }\n  },\n  'crescent': {\n    dur: 750,\n    circles: 1,\n    fn: () => {\n      return {\n        r: 26,\n        style: {}\n      };\n    }\n  },\n  'dots': {\n    dur: 750,\n    circles: 3,\n    fn: (_, index) => {\n      const animationDelay = -(110 * index) + 'ms';\n      return {\n        r: 6,\n        style: {\n          'left': `${9 - (9 * index)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'lines': {\n    dur: 1000,\n    lines: 12,\n    fn: (dur, index, total) => {\n      const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      return {\n        y1: 17,\n        y2: 29,\n        style: {\n          'transform': transform,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'lines-small': {\n    dur: 1000,\n    lines: 12,\n    fn: (dur, index, total) => {\n      const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      return {\n        y1: 12,\n        y2: 20,\n        style: {\n          'transform': transform,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  }\n};\nconst SPINNERS = spinners;\n\nexport { SPINNERS as S };\n","const hostContext = (selector, el) => {\n  return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color, cssClassMap) => {\n  return (typeof color === 'string' && color.length > 0) ? Object.assign({ 'ion-color': true, [`ion-color-${color}`]: true }, cssClassMap) : cssClassMap;\n};\nconst getClassList = (classes) => {\n  if (classes !== undefined) {\n    const array = Array.isArray(classes) ? classes : classes.split(' ');\n    return array\n      .filter(c => c != null)\n      .map(c => c.trim())\n      .filter(c => c !== '');\n  }\n  return [];\n};\nconst getClassMap = (classes) => {\n  const map = {};\n  getClassList(classes).forEach(c => map[c] = true);\n  return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction, animation) => {\n  if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n    const router = document.querySelector('ion-router');\n    if (router) {\n      if (ev != null) {\n        ev.preventDefault();\n      }\n      return router.push(url, direction, animation);\n    }\n  }\n  return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { Task } from '../models/task';\nimport { TaskService } from '../services/TaskService';\n\n@Component({\n  selector: 'app-modal-popup-add',\n  templateUrl: './modal-popup-add.page.html',\n  styleUrls: ['./modal-popup-add.page.scss'],\n})\nexport class ModalPopupAddPage implements OnInit {\n  taskName: any;\n  taskDone: number;\n  visible2: boolean;\n  visible: boolean;\n  taskDescription: any;\n\n  constructor(\n    private modalController: ModalController, private TaskService: TaskService\n  ) { }\n\n  ngOnInit() { }\n\n  async closeModel() {\n    const close: string = \"Modal Removed\";\n    await this.modalController.dismiss(close);\n  }\n\n  post(){let send = 0;\n    \n    if(this.taskName != null){\n      send = send + 1;\n    }\n\n    if(this.taskDone >= 0 && this.taskDone <= 1){\n      send = send + 1;\n    }\n\n    if(send == 2){\n      console.log(\"todo okay\")\n      this.visible2=true;\n      this.visible = false;\n      \n      const task: Task = { id: null, name : this.taskName, description: this.taskDescription , done: this.taskDone };\n\n      this.TaskService.createTask(task)\n    \n    }\n\n    if(send != 2){\n      this.visible=true;\n      this.visible2 = false;\n    }\n\n  } \n\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { TaskService } from '../services/TaskService';\n\nimport { Task } from '../models/task';\n\n\n@Component({\n  selector: 'app-modal-popup',\n  templateUrl: './modal-popup.page.html',\n  styleUrls: ['./modal-popup.page.scss'],\n})\n\nexport class ModalPopupPage implements OnInit {\n\n  taskId:any;\n  taskName:any;\n  taskDescription:any;\n  taskDone:any;\n  visible:boolean;\n  visible2:boolean;\n\n\n  @Input() model_title: string;\n\n  constructor(\n    private modalController: ModalController, private TaskService: TaskService\n  ) { }\n\n  ngOnInit() { }\n\n  async closeModel() {\n    const close: string = \"Modal Removed\";\n    await this.modalController.dismiss(close);\n  }\n\n \n\n  post(id: Number){let send = 0;\n    \n    \n    \n    \n    if(this.taskName != null){\n      send = send + 1;\n    }\n\n    if(this.taskDone >= 0 && this.taskDone <= 1){\n      send = send + 1;\n    }\n\n    if(send == 2){\n      console.log(\"todo okay\")\n      this.visible2=true;\n      this.visible = false;\n      \n      const task: Task = { id: id, name : this.taskName, description: this.taskDescription , done: this.taskDone };\n\n     \n      this.TaskService.updateTask(id, task)\n      \n      \n    }\n\n    if(send != 2){\n      this.visible=true;\n      this.visible2 = false;\n    }\n\n    console.log(id)\n\n  } \n\n\n}","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Task } from \"../models/task\";\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/x-www-form-urlencoded' })\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TaskService {\r\n\r\n  endpoint: string = \"http://localhost:8080/Task\";\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  getTask(): Observable<Task[]> {\r\n    return this.httpClient.get<Task[]>(this.endpoint);\r\n  }\r\n\r\n  deleteTask(id: number): Observable<Task> {\r\n    return this.httpClient.delete<Task>(this.endpoint + \"/\" + id)\r\n  }\r\n\r\n  updateTask(id: Number, task: Task) {\r\n\r\n    let bodyEncoded = new URLSearchParams();\r\n    bodyEncoded.append(\"Name\", task.name);\r\n    bodyEncoded.append(\"Description\", task.description);\r\n    bodyEncoded.append(\"Done\", task.done.toString());\r\n\r\n    \r\n    const body = bodyEncoded.toString();\r\n\r\n    console.log(body)\r\n\r\n    this.httpClient.put<Task>(this.endpoint + '/' + id,  body , httpOptions).subscribe(() => {\r\n      console.log(\"Task creada\");\r\n    });\r\n\r\n\r\n  }\r\n\r\n  createTask(task: Task) {\r\n\r\n    let bodyEncoded = new URLSearchParams();\r\n    bodyEncoded.append(\"Name\", task.name);\r\n    bodyEncoded.append(\"Description\", task.description);\r\n    bodyEncoded.append(\"Done\", task.done.toString());\r\n\r\n    \r\n    const body = bodyEncoded.toString();\r\n\r\n    console.log(body)\r\n\r\n    this.httpClient.post<Task>(this.endpoint,  body , httpOptions).subscribe(() => {\r\n      console.log(\"Task añadida\");\r\n    });\r\n\r\n\r\n  }\r\n\r\n  completedTask(id: Number){\r\n \r\n    const done = 1;\r\n    let bodyEncoded = new URLSearchParams();\r\n    bodyEncoded.append(\"Name\", \"\");\r\n    bodyEncoded.append(\"Description\", \"\");\r\n    bodyEncoded.append(\"Done\", done.toString());\r\n    const body = bodyEncoded.toString();\r\n\r\n    console.log(body);\r\n    this.httpClient.put<Task>(this.endpoint + '/' + id,  body , httpOptions).subscribe(() => {\r\n      console.log(\"Task Hecha!\");\r\n    });\r\n    \r\n  }\r\n\r\n\r\n}\r\n\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJtb2RhbC1wb3B1cC1hZGQucGFnZS5zY3NzIn0= */\";","export default \".hide {\\n  visibility: hidden;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZGFsLXBvcHVwLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGtCQUFBO0FBQ0oiLCJmaWxlIjoibW9kYWwtcG9wdXAucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmhpZGUge1xyXG4gICAgdmlzaWJpbGl0eTogaGlkZGVuO1xyXG4gIH0iXX0= */\";","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Añadir una tarea </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-grid>\\n    <ion-row>\\n      <ion-col text-center>\\n\\n    \\n        <h1> Introduce nombre de la tarea: </h1>\\n        <ion-item>\\n          <ion-label floating> </ion-label>\\n          <ion-input type=\\\"text\\\" [(ngModel)]=\\\"taskName\\\"></ion-input>\\n        </ion-item>\\n\\n\\n        <h1> Introduce la descripción de la tarea: </h1>\\n\\n        <ion-item>\\n\\n          <ion-input type=\\\"text\\\" [(ngModel)]=\\\"taskDescription\\\" ></ion-input>\\n\\n        </ion-item>\\n\\n        <h1> Introduce el estado de la tarea (1=hecho / 0=No hecho): </h1>\\n        <ion-item>\\n          <ion-input type=\\\"text\\\" [(ngModel)]=\\\"taskDone\\\" ></ion-input>\\n        </ion-item>\\n\\n        <br>\\n\\n        <h1 *ngIf=\\\"this.visible === true\\\" > Ha habido un error!</h1>\\n        <h1 *ngIf=\\\"this.visible2 === true\\\" > Todo correcto!!</h1>\\n\\n    \\n        <ion-button type=\\\"button\\\" (click)=\\\"post(this.Id)\\\">Crear tarea </ion-button>\\n        <ion-button (click)=\\\"closeModel()\\\">Cerrar formulario</ion-button>\\n      </ion-col>\\n\\n    </ion-row>\\n\\n  </ion-grid>\\n</ion-content>\";","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Modificar tarea </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-grid>\\n    <ion-row>\\n      <ion-col text-center>\\n\\n        \\n\\n        <h1> Introduce nombre de la tarea: </h1>\\n        <ion-item>\\n          <ion-label floating> </ion-label>\\n          <ion-input type=\\\"text\\\" [(ngModel)]=\\\"taskName\\\" placeholder=\\\"{{Nombre}}\\\"></ion-input>\\n        </ion-item>\\n\\n\\n        <h1> Introduce descripción de la tarea: </h1>\\n\\n        <ion-item>\\n\\n\\n          <ion-input type=\\\"text\\\" [(ngModel)]=\\\"taskDescription\\\" placeholder=\\\"{{Description}}\\\"></ion-input>\\n\\n        </ion-item>\\n\\n        <h1> Introduce el estado de la tarea (1=hecho / 0=No hecho): </h1>\\n        <ion-item>\\n          <ion-input type=\\\"text\\\" [(ngModel)]=\\\"taskDone\\\" placeholder=\\\"{{Done}}\\\"></ion-input>\\n        </ion-item>\\n\\n        <br>\\n\\n        <h1 *ngIf=\\\"this.visible === true\\\" > Ha habido un error!</h1>\\n        <h1 *ngIf=\\\"this.visible2 === true\\\" > Todo correcto!!</h1>\\n\\n    \\n        <ion-button type=\\\"button\\\" (click)=\\\"post(this.Id)\\\">Actualizar tarea </ion-button>\\n        <ion-button (click)=\\\"closeModel()\\\">Cerrar formulario</ion-button>\\n      </ion-col>\\n\\n    </ion-row>\\n\\n  </ion-grid>\\n</ion-content>\";"],"sourceRoot":"webpack:///"}